}
}
sites
for(i in 1:length(chronMat.living$SiteID)){
chronMat.living$SiteID[i] <- sites[chronMat.living$SiteID[i]]
}
for(i in 1:length(chronMat.dead$SiteID)){
chronMat.dead$SiteID[i] <- sites[chronMat.dead$SiteID[i]]
}
unique(chronMat.living$SiteID)
nsites
remaining.species <- intersect(chronMat.living$SpeciesID, chronMat.dead$SpeciesID)
species <- seq(1,nspecies,1)
removed.species <- setdiff(species, remaining.species)
n = 0
for(i in 1:length(species)){
if(i %in% removed.species){
species <- insert(species, i, 0)
}
}
for(i in 1:length(chronMat.living$SpeciesID)){
chronMat.living$SpeciesID[i] <- species[chronMat.living$SpeciesID[i]]
}
for(i in 1:length(chronMat.dead$SpeciesID)){
chronMat.dead$SpeciesID[i] <- species[chronMat.dead$SpeciesID[i]]
}
site.species <- unique(chronMat.living[,c('SiteID','SpeciesID')])[,'SpeciesID']
# define new nyears, nsites, and nspecies after filtering
(nsites <- length(remaining.sites))
(nyears <- length(unique(union(chronMat.living$Year, chronMat.dead$Year))))
(nspecies <- length(remaining.species))
# precipitation
pre <- read.csv("pre_2017_11_28.csv")
# filtering out the sites that were removed from the data set
pre <- pre[pre$site_num %in% remaining.sites,]
# reassigning site numbers using the same logic as before
for(i in 1:dim(pre)[1]){
pre$site_num[i] <- sites[pre$site_num[i]]
}
# making an empty nyears*12*nsites array to store the precip data
# an array of matrices, with each matrix containing the precip data for a site
# matrix columns as months, rows as years
ppt.array <- array(dim = c(length(unique(pre$year)), 12, nsites))
# fill in the array
# loop through sites
for(i in 1:nsites){
ppt <- pre %>% # grab precip data
filter(site_num == i) %>% # filter by site
spread(month, pre) %>% # spread into correct format
select(-year, -site_num, -lon, -lat) # remove unwanted columns
ppt <- as.matrix(ppt) # convert to matrix
for(j in 1:116){ # year (row) loop
for(k in 1:12){ # month (column) loop
ppt.array[j,k,i] <- ppt[j,k] # fill in the ppt array
}
}
}
# same procedure for temp
tmp <- read.csv("tmp_2017_11_28.csv")
# filtering out the sites that were removed from the data set
tmp <- tmp[tmp$site_num %in% remaining.sites,]
# reassigning site numbers using the same logic as before
for(i in 1:dim(tmp)[1]){
tmp$site_num[i] <- sites[tmp$site_num[i]]
}
temp.array <- array(dim = c(length(unique(tmp$year)), 12, nsites))
for(i in 1:nsites){
temp <- tmp %>%
filter(site_num == i) %>%
spread(month, tmp) %>%
select(-year, -site_num, -lon, -lat)
temp <- as.matrix(temp)
for(j in 1:116){
for(k in 1:12){
temp.array[j,k,i] <- temp[j,k]
}
}
}
# generating vector of average climate by site for covariate centering
ppt.ave <- c()
temp.ave <- c()
for(i in 1:nsites){
ppt.ave[i] <- as.integer(mean(ppt.array[,,i], na.rm = T))
temp.ave[i] <- as.integer(mean(temp.array[,,i], na.rm = T))
}
# lets compile our data lists
# living chron data
SAM_dat_living_chron <- list(Nv=2, Nlag=5,
Nyears= nyears,
Nring = length(chronMat.living$Year),
Nsites = nsites, Nspecies = nspecies,
xave=cbind(ppt.ave, temp.ave),
block = structure(.Data=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30,
31, 31, 31, 32, 32, 32, 33, 33, 33, 34, 34, 34,
35, 35, 35, 36, 36, 36, 37, 37, 37, 38, 38, 38),
.Dim=c(12,5)),
BlockSize = c(1, 1, 2, 3, 3), Nblocks = 38,
LogWidth = chronMat.living$logRWI,
AR1 = chronMat.living$lagRWI,
Year = chronMat.living$Year,
SiteID = chronMat.living$SiteID,
SpeciesID = chronMat.living$SpeciesID,
species.site = site.species,
ppt = ppt.array,
tave = temp.array)
save(SAM_dat_living_chron, file = paste0("./rboone/data/SAM_dat_living_chron.R"))
SAM_dat_dead_chron <- list(Nv=2, Nlag=5,
Nyears = nyears,
Nring = length(chronMat.dead$Year),
Nsites = nsites,  Nspecies = nspecies,
xave=cbind(ppt.ave, temp.ave),
block = structure(.Data=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30,
31, 31, 31, 32, 32, 32, 33, 33, 33, 34, 34, 34,
35, 35, 35, 36, 36, 36, 37, 37, 37, 38, 38, 38),
.Dim=c(12,5)),
BlockSize = c(1, 1, 2, 3, 3), Nblocks = 38,
LogWidth = chronMat.dead$logRWI,
AR1 = chronMat.dead$lagRWI,
Year = chronMat.dead$Year,
SiteID = chronMat.dead$SiteID,
SpeciesID = chronMat.dead$SpeciesID,
species.site = site.species,
ppt = ppt.array,
tave = temp.array)
save(SAM_dat_dead_chron, file = paste0("./rboone/data/SAM_dat_dead_chron.R"))
# living chron data with deltaX
SAM_dat_living_chron_with_deltaX <- list(Nv=2, Nlag=5,
Nyears= nyears,
Nring = length(chronMat.living$Year),
Nsites = nsites,  Nspecies = nspecies,
xave=cbind(ppt.ave, temp.ave),
block = structure(.Data=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30,
31, 31, 31, 32, 32, 32, 33, 33, 33, 34, 34, 34,
35, 35, 35, 36, 36, 36, 37, 37, 37, 38, 38, 38),
.Dim=c(12,5)),
deltaX = structure(.Data = rep(1, times = 1748), .Dim = c(38, 2, 23)),
BlockSize = c(1, 1, 2, 3, 3), Nblocks = 38,
LogWidth = chronMat.living$logRWI,
AR1 = chronMat.living$lagRWI,
Year = chronMat.living$Year,
SiteID = chronMat.living$SiteID,
SpeciesID = chronMat.living$SpeciesID,
species.site = site.species,
ppt = ppt.array,
tave = temp.array)
save(SAM_dat_living_chron_with_deltaX, file = paste0("./rboone/data/SAM_dat_living_chron_with_deltaX.R"))
# dead chron data with deltax
SAM_dat_dead_chron_with_deltaX <- list(Nv=2, Nlag=5,
Nyears= nyears,
Nring = length(chronMat.dead$Year),
Nsites = nsites,  Nspecies = nspecies,
xave=cbind(ppt.ave, temp.ave),
block = structure(.Data=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30,
31, 31, 31, 32, 32, 32, 33, 33, 33, 34, 34, 34,
35, 35, 35, 36, 36, 36, 37, 37, 37, 38, 38, 38),
.Dim=c(12,5)),
deltaX = structure(.Data = rep(1, times = 1748), .Dim = c(38, 2, 23)),
BlockSize = c(1, 1, 2, 3, 3), Nblocks = 38,
LogWidth = chronMat.dead$logRWI,
AR1 = chronMat.dead$lagRWI,
Year = chronMat.dead$Year,
SiteID = chronMat.dead$SiteID,
SpeciesID = chronMat.dead$SpeciesID,
species.site = site.species,
ppt = ppt.array,
tave = temp.array)
save(SAM_dat_dead_chron_with_deltaX, file = paste0("./rboone/data/SAM_dat_dead_chron_with_deltaX.R"))
source('G:/My Drive/SAM_DeadLive_trees/rboone/Data_maker_stacked_species.R', echo=TRUE)
site.conv <- read.csv("rboone/site_conversion_table.csv")
head(site.conv)
dim(site.conv)
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(site = rep(1:116, each = 12))
ppt.corr <- ppt.corr[ppt.corr$site %in% site.conv$original == TRUE,]
head(ppt.corr)
mos <- c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(mos, each = 12) repsite = rep(1:116, each = 12)) %>%
select(month, Corr, site)
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(mos, each = 12), site = rep(1:116, each = 12)) %>%
select(month, Corr, site)
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(mos, times = 116), site = rep(1:116, each = 12)) %>%
select(month, Corr, site)
ppt.corr <- ppt.corr[ppt.corr$site %in% site.conv$original == TRUE,]
head
head(ppt.corr)
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), site = rep(1:116, each = 12)) %>%
select(month, Corr, site)
ppt.corr <- ppt.corr[ppt.corr$site %in% site.conv$original == TRUE,]
sp.comv <- read.csv("rboone/species_conversion_table.csv")
head(SiteSpecies)
site.table <- SiteSpeices %>%
select(Site, Spp) %>%
filter(Site %in% site.conv$original == TRUE)
colnames(site.table) <- c("SiteID", "SpeciesID")
site.table <- SiteSpecies %>%
select(Site, Spp) %>%
filter(Site %in% site.conv$original == TRUE)
colnames(site.table) <- c("SiteID", "SpeciesID")
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), site = rep(1:116, each = 12)) %>%
select(month, Corr, site)
ppt.corr
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), SiteID = rep(1:116, each = 12)) %>%
select(month, Corr, site)
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), SiteID = rep(1:116, each = 12)) %>%
select(month, Corr, SiteID)
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), SiteID = rep(1:116, each = 12)) %>%
select(month, Corr, SiteID) %>%
left_join(site.table)
head(ppt.corr)
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
geom_point(aes(color = factor(SiteID))) +
facet_wrap(~SpeciesID)
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
geom_point(aes(color = factor(SiteID))) +
facet_wrap(~SpeciesID, scales = "free_y")
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
setdiff(site.table$SiteID, ppt.corr$SiteID)
setdiff(site.table$SpeciesID, ppt.corr$SpeciesID)
View(ppt.corr)
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), SiteID = rep(1:116, each = 12)) %>%
select(month, Corr, SiteID) %>%
left_join(site.table) %>%
filter(!is.na(SpeciesID))
ppt.corr <- ppt.corr[ppt.corr$site %in% site.conv$original == TRUE,]
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
head(ppt.corr)
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), SiteID = rep(1:116, each = 12)) %>%
select(month, Corr, SiteID) %>%
left_join(site.table)
head(ppt.corr)
site.conv <- read.csv("rboone/site_conversion_table.csv")
sp.comv <- read.csv("rboone/species_conversion_table.csv")
site.table <- SiteSpecies %>%
select(Site, Spp) %>%
filter(Site %in% site.conv$original == TRUE)
colnames(site.table) <- c("SiteID", "SpeciesID")
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), SiteID = rep(1:116, each = 12)) %>%
select(month, Corr, SiteID) %>%
left_join(site.table) %>%
filter(!is.na(SpeciesIDs))
site.conv <- read.csv("rboone/site_conversion_table.csv")
sp.comv <- read.csv("rboone/species_conversion_table.csv")
site.table <- SiteSpecies %>%
select(Site, Spp) %>%
filter(Site %in% site.conv$original == TRUE)
colnames(site.table) <- c("SiteID", "SpeciesID")
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), SiteID = rep(1:116, each = 12)) %>%
select(month, Corr, SiteID) %>%
left_join(site.table) %>%
filter(!is.na(SpeciesID))
head(ppt.corr)
ppt.corr <- ppt.corr[ppt.corr$SiteID %in% site.conv$original == TRUE,]
head(ppt.corr)
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
View(ppt.corr['SpeciesID'==14,])
View(ppt.corr[ppt.corr$SpeciesID==14,])
length(unique(ppt.corr$SiteID))
sp.comv
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), SiteID = rep(1:116, each = 12)) %>%
select(month, Corr, SiteID) %>%
left_join(site.table) %>%
filter(!is.na(SpeciesID))
ppt.corr <- ppt.corr[ppt.corr$SiteID %in% site.conv$original == TRUE &&
ppt.corr$SpeciesID %in% sp.comv$original == TRUE,]
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
ppt.corr <- ppt.corr[ppt.corr$SiteID %in% site.conv$original == TRUE,]
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), SiteID = rep(1:116, each = 12)) %>%
select(month, Corr, SiteID) %>%
left_join(site.table) %>%
filter(!is.na(SpeciesID))
ppt.corr <- ppt.corr[ppt.corr$SiteID %in% site.conv$original == TRUE,]
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
View(pre[pre$site_num == 8 || pre$site_num == 9])
View(pre[pre$site_num == 8])
View(pre[pre$site_num == 8 || pre$site_num == 9,])
View(pre[pre$site_num == 8,])
View(pre[pre$site_num == 1,])
View(RingWidths[RingWidths$SiteNum == 8])
View(RingWidths[RingWidths$SiteNum == 8,])
View(RingWidths[RingWidths$SiteNum == 1,])
for(i in c(1:116)){
snum <- i
#read in ring widths for individuals from that site
rw <- RingWidths %>%
filter(SiteNum == snum) %>%
select(SiteNum, Year, TreeNum, Width, YearNum, Age)
new_colnames = c("SiteNum", "Year", "CoreID", "Width", "yrID", "Age")
colnames(rw)<- new_colnames
# rw$Width[rw$Width == 0] <- 0.01
# yrID <- sort(unique(rw$yrID))
rwi <- rw %>%
select(Year, CoreID, Width) %>%
pivot_wider(names_from = CoreID, values_from = Width)
rownames <- as.data.frame(rwi[order(rwi$Year),1])[,1]
rwi <- rwi[order(rwi$Year),] %>% select(-Year)
rwi <- as.data.frame(rwi)
row.names(rwi) <- rownames
# rwi <- detrend(rwi, method = "ModNegExp")
ppt <- pre %>%
filter(site_num == snum) %>%
# left_join(tmp) %>%
select(-lon, -lat, -site_num)
tem <- tmp %>%
filter(site_num == snum) %>%
select(-lon, -lat, -site_num)
pptCorr <- dcc(chron(rwi), ppt, selection = 1:12, method = "corr", boot = "std")
ppt.corr.mat[i,] <- pptCorr[["coef"]][["coef"]]
temCorr <- dcc(chron(rwi), tem, selection = 1:12, method = "corr", boot = "std")
tem.corr.mat[i,] <- temCorr[["coef"]][["coef"]]
}
snum <- 8
rw <- RingWidths %>%
filter(SiteNum == snum) %>%
select(SiteNum, Year, TreeNum, Width, YearNum, Age)
new_colnames = c("SiteNum", "Year", "CoreID", "Width", "yrID", "Age")
colnames(rw)<- new_colnames
rwi <- rw %>%
select(Year, CoreID, Width) %>%
pivot_wider(names_from = CoreID, values_from = Width)
rownames <- as.data.frame(rwi[order(rwi$Year),1])[,1]
rwi <- rwi[order(rwi$Year),] %>% select(-Year)
rwi <- as.data.frame(rwi)
row.names(rwi) <- rownames
ppt <- pre %>%
filter(site_num == snum) %>%
# left_join(tmp) %>%
select(-lon, -lat, -site_num)
tem <- tmp %>%
filter(site_num == snum) %>%
select(-lon, -lat, -site_num)
pptCorr <- dcc(chron(rwi), ppt, selection = 1:12, method = "corr", boot = "std")
head(rwi)
View(rwi)
head(ppt)
head(tem)
dim(ppt)
dim(tem)
site.table <- SiteSpecies %>%
select(Site, Spp) %>%
filter(Site %in% site.conv$original == TRUE)
site.table
site.table <- SiteSpecies %>%
select(Site, Spp) %>%
filter(Site %in% site.conv$original == TRUE) %>%
filter(Site != 8)
colnames(site.table) <- c("SiteID", "SpeciesID")
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 116), SiteID = rep(1:116, each = 12)) %>%
select(month, Corr, SiteID) %>%
left_join(site.table) %>%
filter(!is.na(SpeciesID))
ppt.corr <- ppt.corr[ppt.corr$SiteID %in% site.conv$original == TRUE,]
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
head(TreeTable)
114+12
114*12
dim(ppt.corr.mat)
ppt.corr.mat[8,]
ppt.corr.mat <- ppt.corr.mat[c(1:7,10:116),]
tem.corr.mat <- tem.corr.mat[c(1:7,10:116),]
site.table <- SiteSpecies %>%
select(Site, Spp) %>%
filter(Site %in% site.conv$original == TRUE) %>%
filter(Site != 8 && site != 9)
site.table <- SiteSpecies %>%
select(Site, Spp) %>%
filter(Site %in% site.conv$original == TRUE) %>%
filter(Site != 8 && Site != 9)
colnames(site.table) <- c("SiteID", "SpeciesID")
ppt.corr <- as.data.frame(ppt.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 114), SiteID = rep(c(1:7,10:116), each = 12)) %>%
select(month, Corr, SiteID) %>%
left_join(site.table) %>%
filter(!is.na(SpeciesID))
ppt.corr <- ppt.corr[ppt.corr$SiteID %in% site.conv$original == TRUE,]
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
theme_bw() +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
?dcc
plot(pptCorr)
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
theme_bw() +
geom_point(aes(color = factor(SiteID), shape = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
theme_bw() +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
theme_bw() +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y") +
theme(element_text(size = 6))
ggplot(ppt.corr, mapping = aes(x = month, y = Corr)) +
theme_bw() +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
tem.corr <- as.data.frame(tem.corr.mat) %>%
pivot_longer(1:12, names_to = "Month", values_to = "Corr") %>%
cbind(month = rep(1:12, times = 114), SiteID = rep(c(1:7,10:116), each = 12)) %>%
select(month, Corr, SiteID) %>%
left_join(site.table) %>%
filter(!is.na(SpeciesID))
tem.corr <- tem.corr[tem.corr$SiteID %in% site.conv$original == TRUE,]
ggplot(tem.corr, mapping = aes(x = month, y = Corr)) +
theme_bw() +
geom_point(aes(color = factor(SiteID))) +
geom_hline(yintercept = 0) +
facet_wrap(~SpeciesID, scales = "free_y")
setwd("Z:/scratch/rdb273/SAM_DeadLive_trees/rboone/run3")
load("SAM_dat_living_chron.R")
View(SAM_dat_living_chron)
SAM_dat_living_chron[["Year"]]
(yearmin <- min(raw$Year))
source('G:/My Drive/SAM_DeadLive_trees/rboone/Data_maker_stacked_species.R', echo=TRUE)
View(SAM_dat_living_chron)
SAM_dat_living_chron[["Year"]]
table(SAM_dat_living_chron[["Year"]])
setwd("G:/My Drive/SAM_DeadLive_trees")
min(RingWidths$Year[RingWidths$Species == 7])
min(RingWidths$Year[RingWidths$Species == 1])
min(RingWidths$Year[RingWidths$Species == 2])
min(RingWidths$Year[RingWidths$Species == 3])
min(RingWidths$Year[RingWidths$Species == 4])
min(RingWidths$Year[RingWidths$Species == 4]5
min(RingWidths$Year[RingWidths$Species == 5])
min(RingWidths$Year[RingWidths$Species == 6])
min(RingWidths$Year[RingWidths$Species == 7])
min(RingWidths$Year[RingWidths$Species == 8])
min(RingWidths$Year[RingWidths$Species == 9])
min(RingWidths$Year[RingWidths$Species == 10])
min(RingWidths$Year[RingWidths$Species == 11])
min(RingWidths$Year[RingWidths$Species == 12])
min(RingWidths$Year[RingWidths$Species == 13])
min(RingWidths$Year[RingWidths$Species == 14])
min(RingWidths$Year[RingWidths$Species == 15])
min(RingWidths$Year[RingWidths$Species == 16])
min(RingWidths$Year[RingWidths$Species == 17])
min(RingWidths$Year[RingWidths$Species == 18])
min(RingWidths$Year[RingWidths$Species == 19])
min(RingWidths$Year[RingWidths$Species == 20])
min(RingWidths$Year[RingWidths$Species == 21])
min(RingWidths$Year[RingWidths$Species == 22])
min(RingWidths$Year[RingWidths$Species == 23])
min(RingWidths$Year[RingWidths$Species == 24])
